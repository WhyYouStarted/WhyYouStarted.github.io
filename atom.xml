<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>初心</title>
  
  <subtitle>Never forget why you started, and your mission can be accomplished.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://whyyoustarted.github.io/"/>
  <updated>2019-12-07T07:16:01.882Z</updated>
  <id>https://whyyoustarted.github.io/</id>
  
  <author>
    <name>Liu zhimin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在MAC下搭建专属你的hexo博客(二)</title>
    <link href="https://whyyoustarted.github.io/2019/1207/set-up-your-own-hexo-blog-under-mac-2.html"/>
    <id>https://whyyoustarted.github.io/2019/1207/set-up-your-own-hexo-blog-under-mac-2.html</id>
    <published>2019-12-07T02:18:21.000Z</published>
    <updated>2019-12-07T07:16:01.882Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>上一篇已经为大家介绍了如何在创建一个博客，那么接下来展示如何将本地的博客部署在免费的GitHub仓库上，这样你就可以通过GitHub地址来访问博客</p><h2 id="1-注册GitHub"><a href="#1-注册GitHub" class="headerlink" title="1. 注册GitHub"></a>1. 注册GitHub</h2><p>GitHub可以说是程序员的天堂，里面有很多开源免费的软件或者项目，都9102年了，你还没有GitHub你就out了，当然你如果有GitHub请跳过前几步。</p><p><a href="https://github.com" target="_blank" rel="noopener">GitHub官网https://github.com</a></p><p>1.注册</p><p>进入官网后点击<code>Sign up</code>，进行注册</p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-07%E4%B8%8A%E5%8D%88110.54.png" alt=""></p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-07%E4%B8%8A%E5%8D%8811.04.04.png" alt=""></p><p>填完信息以后你需要验证</p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-07%E4%B8%8A%E5%8D%8811.12.23.png" alt=""></p><p>验证完成后点击next，然后出现让你选择免费版和付费版，这里我们选择免费版（当然大佬有钱随意选择）</p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-07%E4%B8%8A%E5%8D%88111.14.03.png" alt=""></p><p>然后是一些问卷，如实填写就行</p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-07%E4%B8%8A%E5%8D%8811.20.41.png" alt=""></p><p>填完后选择Complete setup 或者选择skip this step跳过问卷，然后会验证你的邮箱</p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-07%E4%B8%8A%E5%8D%8811.24.45.png" alt=""></p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-07%E4%B8%8A%E5%8D%8811.26.31.png" alt=""></p><p>点击验证后会跳转到你的GitHub，在这里我们创建存放我们博客的仓库。</p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-07%E4%B8%8A%E5%8D%8811.33.49.png" alt=""></p><p>填完以后点击Create repository，跳转到以下界面</p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-07%E4%B8%8A%E5%8D%8811.40.33.png" alt=""></p><p>这样你的GitHub仓库就准备好了，下面开始将博客部署到GitHub上。</p><h2 id="2-将hexo博客推送到GitHub上"><a href="#2-将hexo博客推送到GitHub上" class="headerlink" title="2. 将hexo博客推送到GitHub上"></a>2. 将hexo博客推送到GitHub上</h2><p>在终端中输入<code>sudo su</code> 并输入密码进入超级管理员，在终端上输入pwd 看看自己是不是在<code>myblog</code>目录下，如果不在就进入<code>myblog</code>,然后终端输入<code>cnpm install --save hexo-deployer-git</code></p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-07%E4%B8%8B%E5%8D%882.25.52.png" alt=""></p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-07%E4%B8%8B%E5%8D%882.04.09.png" alt=""></p><p>现在我们需要设置mybolg下的<code>_config.yml</code>文件，找到最下面的<code>Deployment</code></p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-07%E4%B8%8B%E5%8D%882.10.09.png" alt=""></p><p>将其修改为如下图并保存</p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-07%E4%B8%8B%E5%8D%8821.12.07.png" alt=""></p><p><font color='red'>注意有<code>:</code>后有空格**</font></p><p>在终端中输入<code>hexo g</code>构建博客</p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-07%E4%B8%8B%E5%8D%882.28.18.png" alt=""></p><p>现在可以输入<code>hexo s</code>里本地预览你博客的样子</p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-07%E4%B8%8B%E5%8D%882.30.31.png" alt=""></p><p>在浏览器的搜索栏中输入<code>http://localhost:4000/</code>就可以看到了</p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-07%E4%B8%8B%E5%8D%882.32.16.png" alt=""></p><p>使用<code>control + c</code>结束本地预览</p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-07%E4%B8%8B%E5%8D%882.35.29.png" alt=""></p><p>在终端中输入<code>hexo d</code>，输入GitHub账号和密码</p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-07%E4%B8%8B%E5%8D%882.49.34.png" alt=""></p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-07%E4%B8%8B%E5%8D%882.50.35.png" alt=""></p><p>出现了<code>Deploy done: git</code>就说明部署上去了</p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-07%E4%B8%8B%E5%8D%882.56.20.png" alt=""></p><p>现在我们只需要在网址栏输入<code>GitHub账号.github.io</code>就可以访问你的博客了。</p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-07%E4%B8%8B%E5%8D%882.59.17.png" alt=""></p><p>这样我们就成功把博客部署到了GitHub上了，下一篇将展示如何配置pure主题</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;上一篇已经为大家介绍了如何在创建一个博客，那么接下来展示如何将本地的博客部署在免费的GitHub仓库上，这样你就可以通过GitHub地址来访
      
    
    </summary>
    
    
      <category term="hexo" scheme="https://whyyoustarted.github.io/categories/hexo/"/>
    
    
      <category term="教程" scheme="https://whyyoustarted.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>在MAC下搭建专属你的hexo博客(一)</title>
    <link href="https://whyyoustarted.github.io/2019/1206/set-up-your-own-hexo-blog-under-mac-1.html"/>
    <id>https://whyyoustarted.github.io/2019/1206/set-up-your-own-hexo-blog-under-mac-1.html</id>
    <published>2019-12-06T12:29:08.000Z</published>
    <updated>2019-12-07T01:54:03.539Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>在接下来几篇博客中将展示在MAC下搭建，并配置hexo博客。</p><p>​        本人也是一个算是个电脑小白，从打算有搭建一个博客的想法到现在大致搭建出一个博客一共花费了一个月，其中有一段时间都以为自己搞不出来了，一度想放弃，后来重拾信心，经过了一个星期时间总结别的前辈写的文章，总算是写出来一个初步的博客，将自己搭建博客的全过程记录下来，也希望可以为以后搭建博客的博友解决一点点迷茫，当然，本人技术也不怎么样，并且刚开始写博客，希望有什么错误或者不妥的地方希望大佬指出来，我会及时改正。让我们进入正题吧，Let’s go!</p><h2 id="1-搭建hexo博客"><a href="#1-搭建hexo博客" class="headerlink" title="1.搭建hexo博客"></a>1.搭建hexo博客</h2><p>我选择了hexo博客的主要原因是hexo时间比较长了，网上的问题解决方法也比较全面。</p><p>首先我们需要下载nodejs，我们可以去<code>nodejs.org</code>进行下载</p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-06%E4%B8%8B%E5%8D%8810.20.44.png" alt=""></p><p>下载好后直接安装就行了。</p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-06%E4%B8%8B%E5%8D%8810.32.56.png" alt=""></p><p>在终端上分别输入一下<code>node -v</code>和<code>npm -v</code> 如果有显示版本号，那么就说明你安装成功了。</p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-06%E4%B8%8B%E5%8D%8810.36.41.png" alt=""></p><p>下面在终端中输入<code>sudo su</code> 并输入开机密码 进入超级管理员模式</p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-06%E4%B8%8B%E5%8D%8810.55.10.png" alt=""></p><p>利用npm安装一个淘宝源cnpm，这样会快一点,在终端中输入<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-06%E4%B8%8B%E5%8D%8810.57.42.png" alt=""></p><p>在终端中输入<code>cnpm -v</code>测试一下有没有安装成功，如果出现了以下信息就说明安装成功了</p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-06%E4%B8%8B%E5%8D%8811.00.53.png" alt=""></p><p>接下来使用cnpm来安装hexo框架，在终端中输入<code>cnpm install -g hexo-cli</code> </p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-06%E4%B8%8B%E5%8D%8811.04.35.png" alt=""></p><p>我们再使用<code>hexo -v</code>来检测一下是否安装成功</p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-06%E4%B8%8B%E5%8D%8811.05.39.png" alt=""></p><p>接下来在终端中输入<code>mkdir myblog</code>,在用户文件夹中创建一个myblog文件夹。如果在接下来的操作有什么出现什么错误，可以将这个文件夹删除了再重新创建就行了。</p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-06%E4%B8%8B%E5%8D%8811.11.25.png" alt=""></p><p>先输入<code>cd myblog</code> 进入myblog文件夹再输入<code>sudo hexo init</code>初始化一个博客，速度会有点慢，出现了<code>Start blogging with Hexo!</code> 就可以用了，中间出现warn可以忽略。</p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-06%E4%B8%8B%E5%8D%8811.32.06.png" alt=""></p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-06%E4%B8%8B%E5%8D%8811.32.18.png" alt=""></p><p>然后我们可以打开访达，用户文件夹下的myblog文件夹下发现了hexo为你自动生成了一些博客基础框架的内容</p><p><img src="https://raw.githubusercontent.com/WhyYouStarted/PhotoGallery/master/images/BuildBlog/%E6%88%AA%E5%B1%8F2019-12-06%E4%B8%8B%E5%8D%8811.40.44.png" alt=""></p><p>下面为一些hexo博客常用操作的命令，这些会在后面的文章进行演示，这里就不一一演示了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1.新建一个名为My New Post的文章</span><br><span class="line">hexo new &quot;My New Post&quot;</span><br><span class="line">2.启动本地服务器</span><br><span class="line">hexo server或hexo s</span><br><span class="line">3.清理缓存文件</span><br><span class="line">hexo clean</span><br><span class="line">4.生成静态文件</span><br><span class="line">hexo generate或 hexo g</span><br><span class="line">5.部署网站</span><br><span class="line">hexo deploy或hexo d</span><br></pre></td></tr></table></figure><p>好了，hexo博客就算是构建成功，下一篇展示如何把它保存到Github仓库上。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h1&gt;&lt;p&gt;在接下来几篇博客中将展示在MAC下搭建，并配置hexo博客。&lt;/p&gt;
&lt;p&gt;​        本人也是一个算是个电脑小白，从
      
    
    </summary>
    
    
      <category term="hexo" scheme="https://whyyoustarted.github.io/categories/hexo/"/>
    
    
      <category term="教程" scheme="https://whyyoustarted.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>xml笔记</title>
    <link href="https://whyyoustarted.github.io/2019/1203/xml-notes.html"/>
    <id>https://whyyoustarted.github.io/2019/1203/xml-notes.html</id>
    <published>2019-12-03T09:49:14.000Z</published>
    <updated>2019-12-06T16:27:25.744Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-XML概述"><a href="#1-XML概述" class="headerlink" title="1. XML概述"></a>1. XML概述</h2><ol><li><p>历史：</p><ol><li>GML ：Generalized Markup Language  通用标记语言</li><li>SGML ：Standard Generalized Markup Language 标准通用标记语言，对GML的完善</li><li>HTML ：Hyper Test Markup Language 超文本标记语言</li><li>GML ：Extensible Markup Language可拓展标记语言</li></ol></li><li><p>概念：Extensible Markup Language 可扩展标记语言</p><ul><li><p>可拓展性：标签都是自定义的。</p></li><li><p>功能</p><ul><li>储蓄数据<ol><li>配置文件</li><li>在网络中传输</li></ol></li></ul></li><li><p>xml和html的区别</p><ol><li><p>xml标签都是自定义的，html标签都是预定义的</p></li><li><p>xml的语法严格，html语法松散</p></li><li><p>xml是储存数据的，html是展示数据的。</p></li></ol></li></ul></li></ol><h2 id="2-基本语法"><a href="#2-基本语法" class="headerlink" title="2. 基本语法"></a>2. 基本语法</h2><ol><li><p>文档声明</p><ul><li>以<code>.xml</code>结尾的</li><li>以<code>&lt;?xml version=&#39;XX&#39; [encoding= &quot;XXX&quot;] [standalone=&quot;XX&quot;]?&gt;</code>开头，包括版本类型，编码格式。</li><li>version：版本号，必须的属性</li><li>encoding：编码方式。告知解析引擎当前文档使用的字符集，默认值：ISO-8859-1</li><li>standalone：是否独立<ul><li>取值：<ul><li>yes：不依赖其他文件</li><li>no：依赖其他文件</li></ul></li></ul></li></ul></li><li><p>标签 Tag</p><ol><li>标记标签：XML文档的主要组成部分</li><li>语法<code>&lt;标签名&gt;....&lt;/标签名&gt;</code></li><li>标签必须成对存在：包含一个开始标签和一个结束标签</li><li>开始标签：<code>&lt;标签名&gt;</code></li><li>结束标签：<code>&lt;/标签名&gt;</code></li><li>开始标签和结束标签标签名必须相同。</li><li>开始标签和结束标签范围之间的部分叫做标签体，可以包含一些内容。</li><li>标签体中可以出现子标签，也可以出现纯文本的信息。</li></ol></li><li><p>元素Element</p><ol><li><p>根元素</p></li><li><p>标签(元素,节点)：只强调开始标签和结束标签以及属性，并不重视标签体中包含什么信息</p></li><li><p>标签内容</p></li><li><p>元素：代表从开始标签开始、到结束标签之间所包含的所有内容，称之为一个元素。</p></li><li><p>元素命名规则</p><ul><li><p>以字母或<code>_</code>开头</p></li><li><p>后面可以根字母,数字,<code>_</code>,<code>-</code>或<code>.</code></p></li><li><p>大小写敏感</p></li><li><p>不能是保留字</p></li><li><p>没有长度限制</p></li></ul></li></ol></li><li><p>属性 Attribute </p><ol><li><p>对标签/元素进行额外的附加说明。</p></li><li><p>属性声明在标签的头部（开始标签）。</p></li><li><p>id属性值唯一</p></li><li><p>以键值对的形式存在。</p></li><li><p>属性值必须要加双引号。</p></li><li><p>可有有多组属性，每组属性之间使用空格分隔</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">student</span> <span class="attr">id</span>=<span class="string">"1001"</span> <span class="attr">age</span>=<span class="string">"22"</span> <span class="attr">teacher</span>=<span class="string">"2001,tom,22,male"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>tom<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">gender</span>&gt;</span>male<span class="tag">&lt;/<span class="name">gender</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">teacher</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>2001<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>tom<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">age</span>&gt;</span>22<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">gender</span>&gt;</span>male<span class="tag">&lt;/<span class="name">gender</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">teacher</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">student</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li><li><p>注释</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    单行注释    --&gt;</span> </span><br><span class="line"><span class="comment">&lt;!--    </span></span><br><span class="line"><span class="comment">多行注释</span></span><br><span class="line"><span class="comment">多行注释</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>实体</p><ol><li>概念：XML文件中的有些字符不能直接表示出来例如：<code>&lt;</code>，为了表示他们我们可以借助实体来完成<ul><li><code>&amp;lt;</code> ———-&gt; <code>&lt;</code></li><li><code>&amp;gt;</code>———-&gt; <code>&gt;</code>  </li><li><code>&amp;apos;</code>———-&gt; <code>&#39;</code> </li><li><code>&amp;quot;</code>———-&gt; <code>&quot;</code></li><li><code>&amp;amp;</code>———-&gt; <code>&amp;</code></li></ul></li></ol></li><li><p>文本</p><ul><li><p>CDATA区：在该区域中的数据会被原样展示</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;![CDATA[ 数据 ]]&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>如何编写一个有效的XML文档<br>两点要求：</p><ol><li>必须是一个结构良好的XML文档</li><li>必须使用DTD或者XSD约束文档语义</li></ol></li><li><p>DTD文档约束</p><ul><li><p>xml本身存在很高的灵活度，所以导致每个程序编写的xml文件差异较大，导致标准不能得到统一，解析的时候难度较大。</p></li><li><p>需要使用DTD对文档内容进行约束。</p></li><li><p>约束：制定规则，哪些内容可以出现，哪些内容不能出现….</p><ol><li><p>内部式</p><ol><li><p>内部：被约束的xml文件的内部,DTD代码全部定义在xml文件中</p><p>语法</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE 根元素 [元素声明]&gt;</span></span><br></pre></td></tr></table></figure><p>元素声明：允许出现哪些元素、不允许出现哪些元素、元素必须按照什么顺序排列、每种元素能够出现多少次、元素中必须拥有哪些属性、属性是什么类型、有无默认值、是否必要……</p></li><li><p>使用ELEMENT来定义元素</p><ul><li>语法</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">!ELEMENT</span> 元素名称 类型&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">!ELEMENT</span> 元素名称 内容&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">!ELEMENT</span> <span class="attr">note</span> (<span class="attr">to</span>,<span class="attr">from</span>,<span class="attr">heading</span>,<span class="attr">body</span>)&gt;</span></span><br><span class="line"><span class="comment">&lt;!--在node元素中只能出现to、from、heading、body子元素--&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>数量词：用于定义某个元素可以出现多次 加在元素名称后边，代表该元素可以出现多少次</p><p><code>+</code>    :可以出现一次或者多次，至少出现一次</p><p><code>?</code>    :可以出现零次或者一次</p><p><code>*</code>    :可以出现零次或多次，任意次数</p><p><code>|</code>    :多个元素中选一个</p></li><li><p>#PCDATA：元素内容必须是解析器会解析的文本字符串信息约束元素不能有子元素，只能包含纯文本如果给某一个元素声明了#PCDATA类型的约束，那么这个元素不再能够拥有子元素。</p></li><li><p>EMPTY和ANY</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">!ELEMENT</span> 元素名称 <span class="attr">EMPTY</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--元素必须是空元素。</span></span><br><span class="line"><span class="comment">空元素：开始标签和结束标签之间没有任何内容</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hello</span>&gt;</span><span class="tag">&lt;/<span class="name">hello</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">!ELEMENT</span> 元素名称 <span class="attr">ANY</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--元素中包含的可以使任意内容。--&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>ATTLIST用来定义属性</p><ul><li>格式：<code>&lt;!ATTLIST 元素名 属性名 属性类型 默认值&gt;</code></li><li>属性类型<ol><li><code>ID</code>：属性值必须唯一，属性值必须满足命名规则</li><li><code>enumerated</code>：(枚举值1|枚举值2|枚举值3….)属性</li><li><code>CDATA</code>：属性值为字符</li></ol></li><li>属性默认值<ol><li><code>#REQUIRED</code>：属性值必须出现在元素的开头标签中</li><li><code>#IMPLIED</code>：属性可以不出去，并且当他不出现的时候没有默认值implied</li><li><code>default-value</code>：属性可以不出现，并且当他不出现的时候有默认值的，二该属性的默认值就是<code>atttibute-value</code></li><li><code>#FIXED</code>:属性可以不出现，但是如果出现的话必须是指定的属性值，不出现的话也是指定的默认值</li></ol></li></ul></li></ol></li><li><p>外部式</p><ul><li><p>把DTD单独定义在一个独立<code>.dtd</code>的文件中</p></li><li><p>在xml文件中通过简要的声明将这个外置的DTD文件引入进来。</p><p><code>&lt;!DOCTYPE 根标签名 PUBLIC &quot;dtd文件名字&quot; &quot;dtd文件的位置URL&quot;&gt;</code></p></li></ul></li></ol></li></ul></li><li><p>使用Java程序解析xml文档的方式</p><ol><li><p>SAX 基于事件驱动式、类似爬虫式的解析方式</p><ul><li>SAX弊端是不方便对整个文档进行随机访问</li><li>优点是节省内存</li></ul></li><li><p>DOM  Document Object Model</p></li></ol><p>在开始读取数据之前，先把整个xml文档解析一遍，加载到内存中，变成一棵文档树形结构。</p><ul><li><p>优点：操作方便，可以对文档进行CRUD的所有操作</p></li><li><p>缺点：占内存</p><p> 这两种解析方式都是JDK中原生的解析方式</p></li></ul></li><li><p>xml常见的解析器：</p><ol><li>JAXP：sun公司提供的解析器，支持dom和sax两种思想</li><li>DOM4J：一款非常优秀的解析器</li><li>Jsoup：jsoup 是一款Java 的HTML解析器，可直接解析某个URL地址、HTML文本内容。它提供了一套非常省力的API，可通过DOM，CSS以及类似于jQuery的操作方法来取出和操作数据。</li><li>PULL：Android操作系统内置的解析器，sax方式的。</li></ol></li><li><p>dom4j   Dom for Java</p><ul><li><p>第三方的解析xml的工具，开源、免费</p></li><li><p>如果需要使用第三方的工具或者框架，首先需要导入依赖。</p><ol><li>先把jar文件复制到工程目录下，放在哪里都可以</li><li>想把这个jar文件真正当成依赖文件使用，还需要把他添加到类加载路径中。<br><code>jar右击--&gt;Build Path--&gt;Add to Build Path</code></li></ol></li><li><p>语法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.Document;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.DocumentException;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.Element;</span><br><span class="line"><span class="comment">// import的时候注意：可能出现很多类名重复的情况</span></span><br><span class="line"><span class="comment">//导的所有的包都是org.dom4j包下</span></span><br><span class="line"><span class="keyword">import</span> org.dom4j.io.SAXReader;</span><br><span class="line"><span class="comment">// 解析cities.xml</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dom4jDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">// 第一步、创建Dom4j解析器对象SAXReader</span></span><br><span class="line">SAXReader reader = <span class="keyword">new</span> SAXReader();</span><br><span class="line"><span class="comment">// 第二步、让reader读取文档，能够把一个文档读取成一个树形结构对象</span></span><br><span class="line"><span class="comment">//  这个doc对象已经包含了文档当中所有的内容</span></span><br><span class="line">Document doc = reader.read(<span class="string">"src/com/briup/xml/cities.xml"</span>);</span><br><span class="line"><span class="comment">// 第三步、获取文档的根元素</span></span><br><span class="line">Element root = doc.getRootElement();</span><br><span class="line"><span class="comment">// 第四步、获取根元素下的所有直接子元素也就是要获取所有的&lt;city&gt;</span></span><br><span class="line">List&lt;Element&gt; elements = root.elements();</span><br><span class="line"><span class="comment">// 第五步、遍历这个集合，操作每一个&lt;city&gt;</span></span><br><span class="line"><span class="keyword">for</span>(Element element:elements) &#123;</span><br><span class="line">Element nameEle = element.element(<span class="string">"name"</span>);</span><br><span class="line">Element codeEle = element.element(<span class="string">"area-code"</span>);</span><br><span class="line">String name = nameEle.getText();</span><br><span class="line">String code = codeEle.getText();</span><br><span class="line">System.out.println(<span class="string">"城市名："</span> + name + <span class="string">","</span></span><br><span class="line">+ <span class="string">"区号："</span> + code);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cities</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">city</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>北京市<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">area-code</span>&gt;</span>010<span class="tag">&lt;/<span class="name">area-code</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">city</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">city</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>上海市<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">area-code</span>&gt;</span>021<span class="tag">&lt;/<span class="name">area-code</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">city</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">city</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>天津市<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">area-code</span>&gt;</span>022<span class="tag">&lt;/<span class="name">area-code</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">city</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">city</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>重庆市<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">area-code</span>&gt;</span>023<span class="tag">&lt;/<span class="name">area-code</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">city</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">cities</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-XML概述&quot;&gt;&lt;a href=&quot;#1-XML概述&quot; class=&quot;headerlink&quot; title=&quot;1. XML概述&quot;&gt;&lt;/a&gt;1. XML概述&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;历史：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;GML ：Generalized Marku
      
    
    </summary>
    
    
      <category term="XML" scheme="https://whyyoustarted.github.io/categories/XML/"/>
    
    
      <category term="笔记" scheme="https://whyyoustarted.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://whyyoustarted.github.io/2019/1113/hello-world.html"/>
    <id>https://whyyoustarted.github.io/2019/1113/hello-world.html</id>
    <published>2019-11-13T01:13:11.068Z</published>
    <updated>2019-12-06T16:27:25.227Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
